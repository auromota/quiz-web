!function(){"use strict";function e(e,t,r){function n(t){var n=e.defer();return r.insert(t,"tests").then(function(e){n.resolve(e)},function(e){n.reject(e)}),n.promise}function s(t){var n=e.defer();return r.find(t,"tests","userId").then(function(e){n.resolve(e)},function(e){n.reject(e)}),n.promise}function c(t){var n=e.defer();return r.update(t.id,t,"tests").then(function(e){n.resolve(e)},function(e){n.reject(e)}),n.promise}function i(t){var n=e.defer();return r.find(t,"tests","id").then(function(e){n.resolve(e[0])},function(e){n.reject(e)}),n.promise}function o(){var r=e.defer();try{t.db.select().from(t.tests).innerJoin(t.users,t.tests.userId.eq(t.users.id)).where(t.tests.completedOn.isNotNull()).exec().then(function(e){r.resolve(e)},function(e){r.reject(e)})}catch(n){r.reject(n)}return r.promise}function u(r){var n=e.defer();try{t.db.select().from(t.tests).innerJoin(t.users,t.tests.userId.eq(t.users.id)).where(t.tests.id.eq(r)).exec().then(function(e){n.resolve(e[0])},function(e){n.reject(e)})}catch(s){n.reject(s)}return n.promise}function f(){var t=e.defer();return r.removeAll("tests").then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise}var d={getByUserId:s,add:n,update:c,getById:i,getAllTestsAndUsers:o,getTestAndUser:u,removeAll:f};return d}app.factory("testService",e),e.$inject=["$q","dbService","crudService"]}();