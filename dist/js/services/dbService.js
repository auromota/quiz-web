!function(){"use strict";function e(e,n,t,r,o){function a(){var e=t.defer(),n={storeType:lf.schema.DataStoreType.INDEXED_DB};return null===y.db?(b=!0,c().connect(n).then(function(n){b=!1,y.db=n;for(s in o)y[s]=y.db.getSchema().table(s);window.db=n,e.resolve()},function(n){e.reject(n)})):e.resolve(),e.promise}function c(){var e,n=lf.schema.create("database",1);for(e in o){var t=n.createTable(e);o[e].columns&&o[e].columns.forEach(function(e){t.addColumn(e.name,e.type),e.isNullable&&t.addNullable([e.name])}),o[e].primaryKeys&&o[e].primaryKeys.forEach(function(e){e.isAutoIncrement?t.addPrimaryKey([e.column],!0):t.addPrimaryKey([e.column])}),o[e].foreignKeys&&o[e].foreignKeys.forEach(function(e){t.addForeignKey(e.name,{local:e.column,ref:e.ref,action:e.action})})}return n}function i(){a().then(function(){f().then(function(e){e||u().then(function(){d=!0})})})}function u(){var n="./questions.json";return e.get(n).then(function(e){var n=e.data.map(function(e){return y.questions.createRow(e)});return y.db.insert().into(y.questions).values(n).exec()})}function f(){var e=t.defer();return y.db.select().from(y.questions).exec().then(function(n){e.resolve(n.length>0)}),e.promise}var s,l=null,d=!1,m={},y={db:l,isReady:d,connect:a,initDatabase:i};for(s in m)m[s]=null,y[s]=m[s];var b=!1;return y}app.factory("dbService",e),e.$inject=["$http","$log","$q","$rootScope","TABLE"]}();